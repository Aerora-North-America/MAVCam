
{% if is_sync %}
{% if has_result %}std::pair<{{ plugin_name.upper_camel_case }}::Result, {% endif %}{% if return_type.is_repeated %}std::vector<{% if not return_type.is_primitive%}{{ plugin_name.upper_camel_case }}::{% endif %}{{ return_type.inner_name }}>{% else %}{% if not return_type.is_primitive%}{{ plugin_name.upper_camel_case }}::{% endif %}{{ return_type.name }}{% endif %}{% if has_result %}>{% endif %} {{ plugin_name.upper_camel_case }}Impl::{{ name.lower_snake_case }}({% for param in params %}{% if not param.type_info.is_primitive %}{{ plugin_name.upper_camel_case }}::{% endif %}{{ param.type_info.name }} {{ param.name.lower_snake_case }}{{ ", " if not loop.last }}{% endfor %})
{
    // TODO :)
    return {};
}
{% endif %}
